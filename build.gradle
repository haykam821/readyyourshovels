plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
group = project.maven_group

if (System.env.CI == "true") {
    def branch
    branch = System.env.GITHUB_REF
    branch = branch.substring(branch.lastIndexOf("/") + 1)

    version = "${project.mod_version}+a${System.env.GITHUB_RUN_NUMBER}.${project.minecraft_version}-fabric"
} else {
    version = "${project.mod_version}+${project.minecraft_version}-fabric"
}

minecraft {}

repositories {
    maven { url "https://jitpack.io" }
    maven { url "https://maven.dblsaiko.net" }
    maven { url "https://server.bbkr.space/artifactory/libs-release" }
}

dependencies {
    // base
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    // chord
    include ("com.github.andantedevs:chord:${project.chord_version}") { exclude ( group: "net.fabricmc.fabric-api" ) }
    modImplementation ("com.github.andantedevs:chord:${project.chord_version}") { exclude ( group: "net.fabricmc.fabric-api" ) }

    // runtime utils
    // modRuntime ("io.github.prospector:modmenu:${project.mod_menu_version}") { exclude ( group: "net.fabricmc.fabric-api" ) }
    // modRuntime ("com.github.joaoh1:OkZoomer:${project.okzoomer_version}") { exclude ( group: "net.fabricmc.fabric-api" ) }

    // modRuntime ("com.github.jellysquid3:sodium-fabric:${project.sodium_version}") { exclude ( group: "net.fabricmc.fabric-api" ) }
    // modRuntime ("com.github.jellysquid3:lithium-fabric:${project.lithium_version}") { exclude ( group: "net.fabricmc.fabric-api" ) }
    // modRuntime ("com.github.jellysquid3:phosphor-fabric:${project.phosphor_version}") { exclude ( group: "net.fabricmc.fabric-api" ) }

    // modImplementation("grondag:canvas-mc116:1.0.+") {
        // exclude group: "net.fabricmc"
        // exclude group: "net.fabricmc.fabric-api"
    // }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    def targetVersion = 8
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            // artifact(sourcesJar) {
                // builtBy remapSourcesJar
            // }
        }
    }


    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/teamhollow/readyyourshovels")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
            }
        }
    }
}
